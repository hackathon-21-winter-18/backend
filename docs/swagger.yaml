openapi: 3.0.0
info:
  title: 21hack18 API
  description: winter hackathon
  version: 1.0.0
servers:
  - url: http://localhost:3000/api

tags:
  - name: oauth
  - name: palaces
  - name: templates
paths:
  /oauth/signup:
    post:
      tags:
        - oauth
  /oauth/login:
    post:
      tags:
        - oauth
  /oauth/logout:
    post:
      tags:
        - oauth
  /oauth/whoamI:
    get:
      tags:
        - oauth
      summary: 自分のユーザー名を取得
  /palaces/{userID}:
    get:
      tags:
        - palaces
      summary: 自分のpalaceの一覧を取得
  /palaces:
      post:
        tags:
          - palaces
        summary: palaceを作成
  /palaces/{palaceID}:
    get: 
      tags:
        - palaces
      summary: 特定のpalaceの情報を取得
    put:
      tags: 
        - palaces
      summary: 特定のpalaceを修正
    delete:
      tags:
        - palaces
      summary: 特定のpalaceを削除
  /templates/{userID}:
    get:
      tags:
        - templates
      summary: 自分が保持しているtemplateを取得
  /templates:
    post:
      tags:
        - templates
      summary: 特定のtemplateを作成
  /templates/{templateID}:
    get:
      tags:
        - templates
      summary: 特定のtemplateを取得
    put:
      tags:
        - templates
      summary: 特定のtemplateを修正
    delete:
      tags:
        - templates
      summary: 特定のtemplateを削除

components:
  schemas:
    LoginRequest:
      type: object
      properties: 
        name: 
          type: string
          description: ユーザー名
        password:
          type: string
      required:
      - name
      - password
    UserMe:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      description: ログインしたらフロントでuserIDはポスト用に保持、名前は表示するから必要
    Palaces:
      type: object
      description: ホーム画面で必要
      properties:
        Words:
          type: array
          items:
            $ref: "#/components/schemas/Palace"
    Palace:
      type: object
      description: 自分の単語が埋め込まれたpalaceの概要。ホーム画面で必要。detailと分けなくてもいいけどこっちのがわかりやすそう。
      properties:
        id:
          type: string
          format: uuid
        name: 
          type: string
        image:
          type: array
        # memo:
        #   type: string
    PalaceDetail:
      type: object
      description: 自分の単語が埋め込まれたpalaceの情報。
      properties:
        id:
          type: string
          format: uuid
          description: そのままPUTするときにid必要
        name:
          type: string
        image: 
          type: array
        embededPins:
          type: array
          items:
            $ref: "#/components/schemas/EmbededPin"
        # createdBy:
        #   type: string
        #   format: uuid　フロントが保持できていてpostできれば必要ない
    EmbededPin:
      type: object
      description: 単語とピンのペア
      properties: 
        id:
          type: string
          format: uuid
        x:   
          type: integer
        y:
          type: integer
        target:
          type: string
        memo: 
          type: string
        palaceID: 
          type: string
          format: uuid
    Templates:
      type: array
      items:
        $ref: "#/components/schemas/Template"
    Template:
      type: object
      description: 単語を含まない記憶の宮殿
      properties:
        id: 
          type: string
          format: uuid
        name: 
          type: string
        image:
          type: string
        pins: 
          type: array
          items:
            $ref: "#/components/schemas/Pin"
          description: ピンの配列
        # memo:
        #   type: string
        createdBy:
          type: string
          format: uuid
      required:
        - id
        - name
        - createdBy
    Pin:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: そのままputする時のために必要多分
        x:
          type: integer
        y:
          type: integer
        templateID:
          type: string
          format: uuid
      description: 単語なしのピン
    TemplateRequest:
      type: object
      properties:
        name: 
          type: string
        image:
          type: string
        pins: 
          type: array
          items:
            $ref: "#/components/schemas/Pin"
          description: ピンの配列
        # memo:
        #   type: string
        createdBy:
          type: string
          format: uuid
      required:
        - id
        - name
        - createdBy
    PalaceRequest:
      type: object
      properties:
        name:
          type: string
        image: 
          type: array
        embededPins:
          type: array
          items:
            $ref: "#/components/schemas/EmbededPin"
        # createdBy:
        #   type: string
        #   format: uuid

